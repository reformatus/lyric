import 'song.dart';

-- Full Text Search (FTS) table for songs

CREATE VIRTUAL TABLE songs_fts USING fts5(
  uuid UNINDEXED
  ,source_bank_id UNINDEXED
  ,title
  ,lyrics
  ,composer
  ,poet
  ,translator
  ,key_field UNINDEXED
  ,content_map UNINDEXED
  ,content='songs' -- only use the fts table for indexing, get the actual data from the main table (avoid duplication)
  ,content_rowid='id'
  ,tokenize='trigram remove_diacritics 1' -- search by min. 3 letters, ignore diacritics
);

-- Triggers for keeping fts table in sync with the main table
-- see https://www.sqlite.org/fts5.html#external_content_tables
-- see https://kimsereylam.com/sqlite/2020/03/06/full-text-search-with-sqlite.html

CREATE TRIGGER songs_ai AFTER INSERT ON songs BEGIN
  INSERT INTO songs_fts (rowid, uuid, source_bank_id, title, lyrics, composer, poet, translator, key_field, content_map) VALUES (new.id, new.uuid, new.source_bank_id, new.title, new.lyrics, new.composer, new.poet, new.translator, new.key_field, new.content_map);
END;

CREATE TRIGGER songs_ad AFTER DELETE ON songs BEGIN
  INSERT INTO songs_fts (songs_fts, rowid, uuid, source_bank_id, title, lyrics, composer, poet, translator, key_field, content_map) VALUES ('delete', old.id, old.uuid, old.source_bank_id, old.title, old.lyrics, old.composer, old.poet, old.translator, old.key_field, old.content_map);
END;

CREATE TRIGGER songs_au AFTER UPDATE ON songs BEGIN
  INSERT INTO songs_fts (songs_fts, rowid, uuid, source_bank_id, title, lyrics, composer, poet, translator, key_field, content_map) VALUES ('delete', old.id, old.uuid, old.source_bank_id, old.title, old.lyrics, old.composer, old.poet, old.translator, old.key_field, old.content_map);
  INSERT INTO songs_fts (rowid, uuid, source_bank_id, title, lyrics, composer, poet, translator, key_field, content_map) VALUES (new.id, new.uuid, new.source_bank_id, new.title, new.lyrics, new.composer, new.poet, new.translator, new.key_field, new.content_map);
END;